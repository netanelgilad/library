"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.variantCosmos = void 0;
const isType_1 = require("./isType");
const match_1 = require("./match");
const variant_1 = require("./variant");
const types_1 = require("./types");
const flags_1 = require("./flags");
const isOfVariant_1 = require("./isOfVariant");
const remote_1 = require("./remote");
const typed_1 = require("./typed");
const matcher_1 = require("./matcher");
/**
 * Generate a series of functions to work off a given key.
 * @param config the key to use.
 * @template K discriminant as string literal.
 * @returns `VariantCosmos<K>`
 */
function variantCosmos({ key }) {
    const { isType } = isType_1.isTypeImpl(key);
    const { flags } = flags_1.flagsImpl(key);
    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ key,
        isType,
        flags }, isOfVariant_1.isOfVariantImpl(key)), match_1.matchImpl(key)), matcher_1.matcherImpl(key)), remote_1.remoteImpl(key)), typed_1.typedImpl(key)), types_1.typesImpl(key)), variant_1.variantImpl(key));
}
exports.variantCosmos = variantCosmos;
//# sourceMappingURL=cosmos.js.map