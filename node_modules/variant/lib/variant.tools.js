"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.nil = exports.payload = exports.fields = void 0;
/**
 * Describe the fields of the variation.
 *
 * When used creates a function of type `(input: T) => T & {type: 'literal'}`
 * @param defaults set some default values for the object. Note this does *not* adjust the return type.
 */
function fields(defaults = {}) {
    return (...args) => {
        const [arg] = args;
        return Object.assign(Object.assign({}, defaults), arg);
    };
}
exports.fields = fields;
/**
 * Take a single variable of type T and store as 'payload'
 */
function payload(_example) {
    return (payload) => ({ payload });
}
exports.payload = payload;
/**
 * Create an empty variation (`{type: 'literal'}`).
 */
const nil = () => ({});
exports.nil = nil;
//# sourceMappingURL=variant.tools.js.map