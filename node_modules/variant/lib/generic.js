"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Alpha = exports.onTerms = void 0;
const flags_1 = require("./flags");
const variant_1 = require("./variant");
const GENERIC_BRAND = Symbol('VARIANT GENERIC TEMPLATE');
/**
 * Define a generic variant
 * @param func a template factory. Receives 26 generic placeholders (A-Z) in an object, returns a variant template
 * @returns A variant with generic creators
 */
function onTerms(func) {
    return Object.assign(Object.assign({}, func(exports.Alpha)), { [GENERIC_BRAND]: undefined });
}
exports.onTerms = onTerms;
const GTERM = '__term';
// special functions keyed to the type used for generic parameters.
const genericTerms = variant_1.variantImpl(GTERM).variant;
const flags = flags_1.flagsImpl(GTERM).flags;
const GP = genericTerms([
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
]);
/**
 * Object with placeholders for generic terms.
 */
exports.Alpha = flags(Object.values(GP).map(f => f()));
//# sourceMappingURL=generic.js.map